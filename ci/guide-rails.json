{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "sample-go-demo-1",
		"language": "GOLANG",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"publish_attributes": {
					"publish": true,
					"docker_images": [
						{
							"repository": "((application.name))",
							"tags": [
								"((application.version))"
							],
							"context": "."
						}
					]
				},
				"exit_actions": {},
				"properties": [
					{
						"name": "gopath",
						"value": "${SEGMENT_BASE_DIR}/cache/go",
						"description": "GOPATH is set to ${SEGMENT_BASE_DIR}/cache/go by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"packages": [
					{
						"name": "((application.name))",
						"downloads": [],
						"files": [
							"app-code/((application.name))*"
						]
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"cache_info": {
					"paths": [
						"((gopath))"
					]
				},
				"tasks": [
					{
						"name": "sample-go-demo-1",
						"steps": [
							{
								"name": "Get Dependencies",
								"definition": "Get Dependencies",
								"command": "go get -t -d ./...\n\ngo install github.com/onsi/ginkgo/v2/ginkgo@v2.1.3 ",
								"properties": null
							},
							{
								"name": "Unit Tests",
								"definition": "Unit Tests",
								"command": "set -o pipefail\n${GOPATH}/bin/ginkgo -cover -r  --skip-package=pb,test,mock,proto,testdata,gr-cli,util | tee ginkgo.output",
								"properties": null
							},
							{
								"name": "Convert coverage",
								"definition": "Convert coverage",
								"command": "cat ginkgo.output 2\u003e\u00261 | go-junit-report \u003e test.xml\ngocov convert coverprofile.out | gocov-xml \u003e coverage.xml",
								"properties": null
							},
							{
								"name": "Build",
								"definition": "Build",
								"command": "cd app-code\ngo build -o ((application.name))",
								"properties": null
							}
						],
						"docker_options": {}
					}
				]
			},
			{
				"name": "Isolation",
				"segment_type": "isolation",
				"run_after": [
					"Build"
				],
				"exit_actions": {},
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"package_dependencies": [
					"((application.name))"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"k8s_instance_groups": [
					{
						"tool_config_alias_id": "2c99a7d3-76d8-40be-4d71-f7811bc9a338",
						"docker_registry_alias_id": "0c4a1a24-d650-4f1b-5a34-e4307deae00d",
						"name": "((application.name))",
						"cluster_name": "",
						"namespace": "((application.name))-((application.branch))",
						"replicas": 1,
						"containers": [
							{
								"name": "((application.name))",
								"image": "guide-rails/((application.name)):((application.version))",
								"ports": [
									{
										"name": "sample-go",
										"hostPort": 3000,
										"containerPort": 3000,
										"protocol": "TCP"
									}
								],
								"resources": {},
								"imagePullPolicy": "Always",
								"securityContext": {
									"capabilities": {
										"drop": [
											"ALL"
										]
									},
									"runAsNonRoot": true,
									"allowPrivilegeEscalation": false
								}
							}
						],
						"ingress": {
							"metadata": {
								"creationTimestamp": null
							},
							"spec": {
								"rules": [
									{
										"http": {
											"paths": [
												{
													"path": "/",
													"backend": {
														"servicePort": 0
													}
												}
											]
										}
									}
								]
							},
							"status": {
								"loadBalancer": {}
							}
						},
						"load_balancing_type": 2,
						"service_name": "((application.name))-((application.branch))",
						"type": "Deployment",
						"deploy_application": true
					}
				],
				"deployment_target": 2
			},
			{
				"name": "Integration",
				"segment_type": "integration",
				"run_after": [
					"Build"
				],
				"exit_actions": {},
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"package_dependencies": [
					"((application.name))"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"instance_groups": [
					{
						"name": "((application.name))",
						"number_of_instances": 1,
						"cloud_provider_type": "aws",
						"vm_type": "default",
						"os_type": "default",
						"networks": [
							"integration"
						],
						"availability_zones": [
							"default"
						],
						"deployment_strategy": {},
						"dependencies": []
					}
				],
				"tasks": [
					{
						"name": "test-sample-go-app",
						"steps": [
							{
								"name": "verify app is up",
								"definition": "verify app is up",
								"command": "curl http://localhost:3000",
								"properties": null
							}
						],
						"docker_options": {}
					}
				],
				"deployment_target": 1
			}
		],
		"exit_actions": {},
		"default_properties": [],
		"deployment_files": [
			{
				"source_path": "ci/bin/start_service.sh",
				"target_path": "bin/start_service.sh"
			}
		],
		"application_init": {},
		"process": {
			"init": {
				"command": "bin/start_service.sh"
			}
		}
	},
	"organization": {
		"orgname": "Playground"
	}
}